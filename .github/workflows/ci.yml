name: Cargo Build & Test

on:
  pull_request:

env:
  CARGO_TERM_COLOR: always

jobs:
  build_and_test:
    name: Rust project - latest
    strategy:
      matrix:
        toolchain:
          - stable
          - beta
          - nightly
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup rust toolchain ${{ matrix.toolchain }}
        run: |
          rustup update ${{ matrix.toolchain }}
          rustup default ${{ matrix.toolchain }}
          rustup component add rustfmt clippy
      - name: install cargo-binstall
        uses: cargo-bins/cargo-binstall@main
      - name: Install required cargo tools
        run: cargo binstall -y cargo-audit

      - name: Check format
        run: cargo fmt --check

      - name: Validate code
        run: cargo check

      - name: Test code
        run: cargo test --verbose

      - name: Run clippy
        if: ${{ matrix.toolchain == 'stable' }}
        run: |
          cargo clippy --all
          cargo clippy --tests

      - name: Run audit
        run: cargo audit

  # simplify GH settings: have one single build to be required
  build-results:
    name: Final Results
    if: ${{ always() }}
    runs-on: ubuntu-latest
    needs:
      - build_and_test
    steps:
      - name: check for failed builds
        run: |
          cat <<EOF | jq -e 'unique | all(. == "success")'
          ${{ toJson(needs.*.result) }}
          EOF

